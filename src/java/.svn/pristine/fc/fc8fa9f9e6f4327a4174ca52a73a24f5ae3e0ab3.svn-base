/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.dlabs.mis.dao;


import com.dlabs.model.GenerateFee;
import com.dlabs.model.PaymentFeeStructure;
import com.dlabs.model.Timetable;
import com.kjava.base.ReadableException;
import com.kjava.base.db.DaoUtil;
import com.kjava.base.util.ExtJsonUtil;
import com.kjava.base.util.JSONUtil;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;



public class paymentDetailDAO {

      JSONUtil jsonUtil = new ExtJsonUtil();
     
        public Object getAllTimeTableAsJson(Connection conn, int page, int rows) throws ReadableException {

        JSONObject job = new JSONObject();        
        Collection<JSONObject> items = new ArrayList<JSONObject>();
        ResultSet rs = null;
        int count =0;
        int x=0,i=0;
        String schoolid="1000";
        String studentname= null;;
        String classname= null;;
        String duedate= null;;
        int amount=0;
        int totamount=0;
        String fineamount= null;;
        String frommonth= null;;
        String tomonth= null;;
        

        try{
            //rs = DaoUtil.executeQuery(conn, "SELECT count(1) as count from timetable where schoolid=? and classid=?");
            rs = DaoUtil.executeQuery(conn, "SELECT count(1) as count from timetable");
            if(rs.next()) {
                count = rs.getInt("count");

            }
            rs = DaoUtil.executeQuery(conn,"SELECT S.name NAME, C.name ClASS, T.name Template ,"
                                           +"FS.fee_structure_id id , FS.fee_name feename, FS.fee_amount amount "
                                           + "FROM student S ,class C , "
                                           + "     templates T ,feestructure FS , "
                                           + "     template_structure_mapping M "
                                           + "WHERE S.classid=C.classid AND C.feetemplate=T.id "
                                           + "AND T.id=M.template_id AND FS.fee_structure_id=M.fee_structure_id "
                                           + "AND S.studentid ='208aac44-92cb-4296-b61e-cbd09d27e4fb'");

            while(rs.next()){

               studentname=rs.getString("NAME");
               classname  =rs.getString("CLASS");               
               JSONObject obj =new JSONObject();
               obj.put("fee_structure_id",rs.getString("id"));
               obj.put("fee_name",rs.getString("feename"));
               amount=rs.getInt("amount");
               obj.put("fee_amount",amount);
               totamount=totamount+amount;
               items.add(obj);
               x++;
            }

            job.put("studentname",studentname);
            job.put("classname",classname);
            job.put("duedate","2013-05-31");
            job.put("totamount",totamount);
            job.put("fineamount",0);
            job.put("frommonth","May");
            job.put("tomonth","May");
            job.put("feestructure",items);
        }
        catch (SQLException ex) {
            Logger.getLogger(MasterDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return job;
    }

  

    public Object generateFee(Connection conn, String sessionid, String classid, int month) throws ReadableException, SQLException {

        JSONObject job = new JSONObject();        
        Collection<JSONObject> items = new ArrayList<JSONObject>();
        ResultSet rs = null;
        ResultSet rsfee = null;
        ResultSet rsstud = null;
        ResultSet fsrs=null;
        int amount=0;
        String templateid="";
        String feeid="";
        String class_id="";
        String schoolid="";
        int flag=0;
        if(sessionid!=null && month!=0){
         
         rs= DaoUtil.executeQuery(conn, "SELECT schoolid, classid , feetemplate FROM class");               
    
         while(rs.next()){

            if(rs.getObject("classid")!=null)
              class_id=rs.getString("classid");
            if(rs.getObject("schoolid")!=null)
              schoolid=rs.getString("schoolid");           
            if(rs.getObject("feetemplate")!=null)
              templateid=rs.getString("feetemplate");
           
           String query="SELECT SUM(F.fee_amount) amount "
                      + " FROM feestructure F, templates T ,template_Structure_mapping TM "
                      + " WHERE F.fee_structure_id=TM.fee_structure_id    "
                      + " AND TM.template_id=T.id   "
                      + " AND T.id=?";   
           
           rsfee = DaoUtil.executeQuery(conn,query,new Object[]{templateid});               
           if(rsfee.next()){
           if(rsfee.getObject("amount")!=null)
               amount=rsfee.getInt("amount");
           }
           
           
           
           String studquery="Select studentid from student where classid=?";
           rsstud=DaoUtil.executeQuery(conn,studquery,new Object[]{class_id});               
           String studid="";
           while(rsstud.next()){
               
            if(rsstud.getObject("studentid")!=null)
             studid=rsstud.getString("studentid");
               
               String insetquery="INSERT INTO generatemonthlyfee "
                               + " (monthly_fee_id,school_id,class_id,student_id,for_month,"
                               + " for_year,amount,templateid,paid_status)	"
                               + " VALUES(?,?,?,?,?,?,?,?,?)";
               feeid= java.util.UUID.randomUUID().toString();
               
               
                               
               if(DaoUtil.executeUpdate(conn, insetquery, new Object[]{feeid,schoolid,class_id,studid,month,sessionid,amount,templateid,0})==1){
                  flag=1;                                    

                      String feestructure="SELECT f.fee_structure_id , f.fee_amount FROM feestructure f , template_structure_mapping t WHERE t.template_id=?   AND f.fee_structure_id =t.fee_structure_id";
                      fsrs =DaoUtil.executeQuery(conn,feestructure,new Object[]{templateid});               

                      String insertquery="INSERT INTO monthlyfeedetails (monthly_fee_id,student_id ,fee_structure_id, amount) VALUES(?,?,?,?)";

                      while(fsrs.next()){
                      
                          String feestru=null;
                          int    amount1=0;
                          
                          if(fsrs.getObject("fee_structure_id")!=null)
                              feestru=fsrs.getString("fee_structure_id");
                          if(fsrs.getObject("fee_amount")!=null)
                              amount1=fsrs.getInt("fee_amount");
                                                    
                          DaoUtil.executeUpdate(conn, insertquery, new Object[]{feeid,studid,feestru,amount1});                                                  
                      }
               }
           } 
                      
         }
         
        }
        if(flag==1)
            conn.commit();
            return null;
        
    }

    public Object getAllAsJson1(Connection conn, int page, int rows) throws ReadableException {
        JSONObject job = null;
        ResultSet rs = null;
        int count =0;
        String schoolid="1000";
        try{
            rs = DaoUtil.executeQuery(conn, "SELECT count(1) count FROM class c, templates t , student s ,generatemonthlyfee g WHERE g.class_id   = c.classid  AND g.templateid = t.id   AND g.student_id = s.studentid");
            if(rs.next()) {
                count = rs.getInt("count");

            }
            rs = DaoUtil.executeQuery(conn,"SELECT g.monthly_fee_id,g.school_id,g.class_id,c.name classname,g.student_id,s.name AS studentname,CASE g.for_month WHEN 1 THEN 'January' WHEN 2 THEN 'Febrary' WHEN 3 THEN 'March' WHEN 4 THEN 'April' WHEN 5 THEN 'May' WHEN 6 THEN 'June' WHEN 7 THEN 'July' WHEN 8 THEN 'August' WHEN 9 THEN 'September' WHEN 10 THEN 'October' WHEN 11 THEN 'November' WHEN 12 THEN 'December' END as for_month,g.for_year,g.amount,g.due_date,g.templateid,t.name as template,CASE g.paid_status WHEN 0 THEN null WHEN 1 THEN true END AS markpaid,CASE g.paid_status WHEN 0 THEN 'Payment Pending' WHEN 1 THEN 'Payment Received' END AS paid_status,g.paid_on,g.paid_by,g.paid_amount,g.comment FROM class c, templates t , student s ,generatemonthlyfee g WHERE g.class_id   = c.classid  AND g.templateid = t.id   AND g.student_id = s.studentid limit ? offset ?",new Object[]{15,0});
            job = jsonUtil.getJsonObject(rs, count, page,rows, false);
        }
        catch (SQLException ex) {
            Logger.getLogger(StudentDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return job;
    }
}
