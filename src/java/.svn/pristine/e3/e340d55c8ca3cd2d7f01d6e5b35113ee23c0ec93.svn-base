/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dlabs.mis.dao;

import com.dlabs.model.Classes;
import com.dlabs.model.ExtraFeeModel;
import com.dlabs.model.GenerateFee;
import com.kjava.base.ReadableException;

import com.kjava.base.db.DaoUtil;
import com.kjava.base.util.ExtJsonUtil;
import com.kjava.base.util.JSONUtil;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.util.HashSet;
//import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;

/**
 *
 * @author cd
 */
public class StudentMonthlyFeeDAO {

    JSONUtil jsonUtil = new ExtJsonUtil();
    public ExtraFeeModel addOrEditFee(Connection conn,ExtraFeeModel obj) throws ReadableException {
                int flag=0;
        try {
            String query = "";
            String fee_structure_id = "";
            if(obj.getFeename()==null) {
                query="";     
                fee_structure_id = java.util.UUID.randomUUID().toString();
                String insertnewfeestructure="INSERT INTO feestructure,(fee_structure_id,fee_name,fee_amount,comment) VALUES (?,?,?,?,?,?,?)";
                
                if(DaoUtil.executeUpdate(conn, insertnewfeestructure, new Object[]{fee_structure_id,obj.getFeename(),obj.getFeeamount(),obj.getComment()})==1){
                    
                      String insertquery="INSERT INTO monthlyfeedetails (monthly_fee_id,student_id ,fee_structure_id, amount) VALUES(?,?,?,?)";                              
                                if(DaoUtil.executeUpdate(conn, insertquery, new Object[]{obj.getMonhtly_fee_id(),obj.getStudent_id(),fee_structure_id,obj.getFeeamount()})==1){
                                    String updatequery="UPDATE generatemonthlyfee SET amount=amount + ? WHERE monthly_fee_id=? AND student_id=? AND for_month=?";                  

                                    if(DaoUtil.executeUpdate(conn, updatequery , new Object[]{obj.getFeeamount(),obj.getMonhtly_fee_id(),obj.getStudent_id(),obj.getMonth()})==1){ 
                                          flag=1;
                                       }

                             }        
                    
                }
            }    
            else{
               String insertquery="INSERT INTO monthlyfeedetails (monthly_fee_id,student_id ,fee_structure_id, amount) VALUES(?,?,?,?)";                              
               if(DaoUtil.executeUpdate(conn, insertquery, new Object[]{obj.getMonhtly_fee_id(),obj.getStudent_id(),obj.getFeetype(),obj.getFeeamount()})==1){
                   String updatequery="UPDATE generatemonthlyfee SET amount=amount + ? WHERE monthly_fee_id=? AND student_id=? AND for_month=?";                  
                   ResultSet rs=DaoUtil.executeQuery(conn,"SELECT fee_amount FROM feestructure WHERE fee_structure_id=?",new Object[]{obj.getFeetype()});
                   int amount=0;
                   if(rs.next()){
                      
                      if(rs.getObject("fee_amount")!=null)
                          amount=rs.getInt("fee_amount");
                      if(DaoUtil.executeUpdate(conn, updatequery , new Object[]{amount,obj.getMonhtly_fee_id(),obj.getStudent_id(),obj.getMonth()})==1){ 
                         flag=1;
                      }
                   }
                   
            }
            }
           if(flag==1)
           {               
               conn.commit();
           }
        } catch (SQLException ex) {
            throw new ReadableException(ex.getCause(),ex.getMessage(),"ClassDAO", "addoredit");
        }
        return obj;

    }

    public Object getAllFeeAsJson(Connection conn,String monthly_fee_id ,int page, int rows) throws ReadableException {

        JSONObject job = null;
        int count =0;
        String schoolid="1000";
        String countquery=   "SELECT COUNT(1) as count " +
                        "  FROM monthlyfeedetails m, student s,feestructure f  ,class c,generatemonthlyfee g , templates t " +
                        " WHERE m.monthly_fee_id=? " +
                        "   AND m.student_id    =s.studentid " +
                        "   AND m.fee_structure_id=f.fee_structure_id " +
                        "   AND s.classid=c.classid " +
                        "   AND g.monthly_fee_id=m.monthly_fee_id " +
                        "   AND g.templateid=t.id";
        String dataquery="SELECT m.monthly_fee_id,s.studentid as student_id,s.name AS studentname, c.classid , c.name AS classname, f.fee_structure_id , f.fee_name AS feename, f.fee_amount AS amount,g.for_month , g.templateid, t.name AS template " +
                        "  FROM monthlyfeedetails m, student s,feestructure f  ,class c,generatemonthlyfee g , templates t " +
                        " WHERE m.monthly_fee_id=? " +
                        "   AND m.student_id    =s.studentid  " +
                        "   AND m.fee_structure_id=f.fee_structure_id " +
                        "   AND s.classid=c.classid " +
                        "   AND g.monthly_fee_id=m.monthly_fee_id " +
                        "   AND g.templateid=t.id";
        try{
            ResultSet rs = DaoUtil.executeQuery(conn,countquery,new Object[]{monthly_fee_id});
            //ResultSet rs = DaoUtil.executeQuery(conn,countquery);
            if(rs.next()) {
                count = rs.getInt("count");
            }
            rs = DaoUtil.executeQuery(conn,dataquery,new Object[]{monthly_fee_id});
           // rs = DaoUtil.executeQuery(conn,dataquery);
            job = jsonUtil.getJsonObject(rs, count, page,rows, false);
        }
        catch (SQLException ex) {
            Logger.getLogger(MasterDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return job;
        
    }

    public GenerateFee markPaid(Connection conn, GenerateFee obj) throws ReadableException  {
        
        String updatequery="UPDATE generatemonthlyfee SET paid_status=? , paid_on=? , paid_by= ? WHERE monthly_fee_id=?";
        int flag=0;
        try {
        if(DaoUtil.executeUpdate(conn, updatequery , new Object[]{1,343434,"11111111",obj.getMonthly_fee_id()})==1){ 
             conn.commit();
             flag=1;        
             obj.setMarkpaid(true);
        }}
        catch (SQLException ex) {
            Logger.getLogger(MasterDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return obj;
 
    }

    public GenerateFee deleteMonthlyFee(Connection conn, GenerateFee obj) throws ReadableException {
        String updatequery="UPDATE generatemonthlyfee SET amount = amount - ? WHERE monthly_fee_id = ?";
        String deletequery="DELETE FROM monthlyfeedetails WHERE monthly_fee_id = ?  AND fee_structure_id = ? AND student_id = ?";
        int flag=0;
        try {
        if(DaoUtil.executeUpdate(conn, deletequery , new Object[]{obj.getMonthly_fee_id(),obj.getFee_structure_id(),obj.getStudent_id()})==1){ 
             
            if(DaoUtil.executeUpdate(conn, updatequery , new Object[]{obj.getAmount(),obj.getMonthly_fee_id()})==1){
               conn.commit();
               obj.setAmount(0);
            }
            
             
        }}
        catch (SQLException ex) {
            Logger.getLogger(MasterDAO.class.getName()).log(Level.SEVERE, null, ex);
        }

        return obj;
     
    }
   
    
}
