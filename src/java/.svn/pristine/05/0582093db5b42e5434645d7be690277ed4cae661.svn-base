/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dlabs.mis.dao;

import com.dlabs.model.*;
import com.kjava.base.ReadableException;
import com.kjava.base.db.DaoUtil;
import com.kjava.base.util.JSONUtil;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
/**
 *
 * @author Kamlesh the admin
 */
@Repository
public class PaymentDAO {
@Autowired 
JSONUtil jsonUtil;
    public Templates addOrEditTemplate(Connection conn, Templates template) throws ReadableException {
           
        String query = "insert into templates(name,comment) values(?,?)";
            Object[] params = null;
            if (template.getId() != 0) {
                query = "update templates set name = ?, comment=? where id = ?";
                params = new Object[]{template.getName(),template.getComment(), template.getId()};
            } else {
                params = new Object[]{template.getName(),template.getComment()};
            }
            DaoUtil.executeUpdate(conn, query, params);
            return template;
        
    }

    public JSONObject getTemplate(Connection conn, int id) throws ReadableException {
        String query ="SELECT reference_id AS referenceId,fee_name AS name,type FROM  template_structure_map t INNER JOIN feestructure f ON t.reference_id=f.fee_structure_id WHERE t.tempate_id=?";
        JSONObject job = null;
        int count = 0;
        ResultSet rs = DaoUtil.executeQuery(conn,query,new Object[]{id});
        job = jsonUtil.getJsonObject(rs, count, 0,40);
        return job;
    }

    public Object getTemplatesAsJson(Connection conn, int start, int limit) throws ReadableException{
        JSONObject job = null;
        ResultSet rs = null;
        int count = 0;
        try {
            rs = DaoUtil.executeQuery(conn, "SELECT count(1) as count from templates" );
            if (rs.next()) {
                count = rs.getInt("count");
            }
            rs = DaoUtil.executeQuery(conn, "SELECT * from templates limit ? offset ?",
                    new Object[]{limit,start});
            job = jsonUtil.getJsonObject(rs, count, start,limit, false);
        } catch (SQLException ex) {
            Logger.getLogger(Property.class.getName()).log(Level.SEVERE, null, ex);
        }
        return job;
    }

    public String delTemplate(Connection conn, Templates template) throws ReadableException {
         String query = "delete from templates where id = ?";
            DaoUtil.executeUpdate(conn, query, template.getId());
            return "{success:true}";
    }

    public JSONObject getAllFeeStructure(Connection conn, int start, int limit) throws ReadableException {
         JSONObject job = null;
        int count = 0;
        try {
            ResultSet rs = DaoUtil.executeQuery(conn, "SELECT count(1) as count FROM feestructure " );
            if (rs.next()) {
                count = rs.getInt("count");
            }
            rs = DaoUtil.executeQuery(conn, "SELECT fee_structure_id as id,fee_name as name,header,fee_type as type,fee_amount as amount,fee_frequency as frequency,`comment` FROM feestructure  limit ? offset ?",
                    new Object[]{limit,start});
            job = jsonUtil.getJsonObject(rs, count, start,limit);
        } catch (SQLException ex) {
            Logger.getLogger(Property.class.getName()).log(Level.SEVERE, null, ex);
        }
        return job;
    }

    public FeeStructure addOrEditFeeStructure(Connection conn, FeeStructure fees) throws ReadableException {
        Object[] params = null;
        String uuid = "";
         String query = "insert into feestructure(fee_structure_id,fee_name,header, fee_type, fee_amount, fee_frequency,`comment`) values(?,?,?,?,?,?,?)";
        if (fees.getId() != null) {
//                query = "update templates set name = ?, comment=? where id = ?";
//                params = new Object[]{template.getName(),template.getComment(), template.getId()};
       } else {
             uuid = UUID.randomUUID().toString();
             params = new Object[]{uuid,fees.getName(),fees.getHeader(), fees.getType(),fees.getAmount(),fees.getFrequency(),fees.getComment()};
       }
       
       DaoUtil.executeUpdate(conn, query, params);
       fees.setId(uuid);
       return fees;
    }

    public String delFeeStructure(Connection conn, FeeStructure fees) {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    public void addOrEditTemplateDetails(Connection conn, TemplateDetail[] details) throws ReadableException {
        String query = "insert into template_structure_map(tempate_id,reference_id,type) values(?,?,?)";
        for(int i=0; i<details.length; i++){
            TemplateDetail obj = details[i];
            DaoUtil.executeUpdate(conn, query, new Object[]{obj.getId(),obj.getReferenceId(),obj.getType()});
        }
    }
    
}
