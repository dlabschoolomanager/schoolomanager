
Ext.define('MyApp.view.payment.FeeTemplateGrid' ,{
    extend: 'Ext.grid.Panel',
    alias:'widget.feetemplategrid',
    title: 'Fee Template',
    layout:'fit',
    viewConfig:{
        forceFit:true,
        emptyText:'<div class="no-results">No Results To display</div>'
    },
    columns:[
    Ext.create('Ext.grid.RowNumberer'),
    {
        header: 'Template Name',
        dataIndex:'name',
        flex:1
    },{
                menuDisabled: true,
                sortable: false,
                xtype: 'actioncolumn',
                width: 50,
                items: [{
                    icon   : 'resources/images/icons/delete.gif',  // Use a URL in the icon config
                    tooltip: 'Version',
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = grid.getStore().getAt(rowIndex);
                        grid.getStore().remove(rec);
                    }
                }]
            
            
//    }, {
//        header:'Template Type',
//        dataIndex:'type'
//    }, {
//        header:'Tot Amount',
//        dataIndex:'amount'
//    }, {
//        header:'Frequency',
//        dataIndex:'frequency'
//    },{
//        header:'Comment',
//        dataIndex:'comment'
    }
    ],
    store:'Templates',
//    selModel:Ext.create('Ext.selection.CheckboxModel',{
//        singleSelect:true
//    }),
    bbar : Ext.create('Ext.PagingToolbar', {
        store: this.store,
        displayInfo: true,
        displayMsg: 'Displaying users {0} - {1} of {2}',
        emptyMsg: "No user to display"
    }),
    initComponent: function() {
        this.tbar =[{
        iconCls: 'icon-add',
        text: 'Add',
        scope:this,
        handler:function(btn){
                   this.addTemplate();
        }
    },this.iconEdit = Ext.create('Ext.Button',{
        iconCls: 'icon-edit',
        text: 'Edit',
        disabled: true
    }),this.iconDelete = Ext.create('Ext.Button',{
        iconCls: 'icon-delete',
        text: 'Delete',
        disabled: true,
        id: 'delete'
    })
    ];
        this.callParent(arguments);
    },
    listeners:{
         selectionchange:function(sm,selected,e){
             this.iconDelete.setDisabled(sm.getCount()==0); 
             this.fireEvent( 'templateChange',sm,selected,e );
         }
    },
    onRender : function(){
         this.callParent(arguments);
    },
    addTemplate : function(){
        var classCombo = Ext.create('MyApp.store.GenericAjaxStore',{
           url: 'generic/GET_CLASS_COMBO',
           model:'MyApp.model.Master'
        })
        classCombo.load();
        var win = Ext.getCmp('feetempate_win');
        if(!win){
            win = Ext.create('Ext.app.view.component.AppWindow', {
                title:'Add New Fee Structure',
                id:'feetempate_win',
                width:450,
                closeAction:'hide',
                top:{
                    image:BASE_URL+'resources/images/createuser.png',
                    formTitle:'Create Fee Structure'
                },
                defaults:{
                    xtype:'textfield',
                    value:'',
                    width:350
                },
                formItems :[
                {
                    name : 'name',
                    fieldLabel: 'Template Name'
                }, {
                    //                xtype:'combobox',
                    //                fieldLabel :'Type',
                    //                store:
                    //                Ext.create('Ext.data.Store', {
                    //                    fields: ['abbr', 'name'],
                    //                    data : [
                    //                    {
                    //                        "abbr":"REF",
                    //                        "name":"Refundable"
                    //                    },
                    //                    {
                    //                        "abbr":"NONREF",
                    //                        "name":"Non Refundable"
                    //                    }
                    //                    ]
                    //                }),
                    //                Autoload:true,
                    //                queryMode: 'local',
                    //                displayField: 'name',
                    //                valueField: 'abbr'
                    //            },
                    //            {
                    //                name : 'amount',
                    //                fieldLabel: 'Amount'
                    //            },{
                    //                xtype:'combobox',
                    //                fieldLabel :'Frequency',
                    //                store:
                    //                Ext.create('Ext.data.Store', {
                    //                    fields: ['abbr', 'name'],
                    //                    data : [{
                    //                        "abbr":"ANN",
                    //                        "name":"Annually"
                    //                    },{
                    //                        "abbr":"MM",
                    //                        "name":"Monthly"
                    //                    },{
                    //                        "abbr":"OT",
                    //                        "name":"One Timer"
                    //                    }
                    //                    ]
                    //                }),
                    //                Autoload:true,
                    //                queryMode: 'local',
                    //                displayField: 'name',
                    //                valueField: 'abbr'

                    //            },{
                    name : 'comment',
                    fieldLabel: 'Comment',
                    xtype:'textarea',
                    height:80
                },{
                    name : 'class',
                    fieldLabel: 'Class',
                    xtype:'combo',
                    multiSelect:true,
                    store:classCombo,
                    queryMode:'local',
                    triggerAction:'all'
                },{
                    name:'id',
                    xtype:'numberfield',
                    value:0,
                    hidden:true
                }
                ],
                buttons :[
                {
                    text: 'Save',
                    action: 'save',
                    scope:this,
                    handler:function(){
                        var form = win.down('form').getForm();
                        if(form.isValid()){
            
                            Ext.Ajax.request({
                                url:'payment/addTemplates.do',
                                type:'json',
                                headers:{
                                    'Content-Type':'application/json'  
                                },
                                params:Ext.JSON.encode(form.getValues()),
                                success: function(res){
                                    Ext.Msg.alert('Success','Template added successfully');
                                    var rec = eval('('+res.responseText+')');
                                    Ext.StoreManager.lookup('Templates').load();
                                }
                            })
                        }
                    }
                },
                Ext.cancelButton
                ]
            })
        }
        //Ext.StoreManager.lookup('Class').load();
        win.show();
    },
    deleteTemplate: function(){
        var grid = this;
        var obj = grid.getSelectionModel().getSelection()[0];
          Ext.Msg.confirm("Alert","Are you sure want to delete records", function(btn){
            if(btn=='yes'){
                
                Ext.Ajax.request({
                url:'payment/delTemplates.do',
                method:'POST',
                type:'json',
                headers:{
                    'Content-Type':'application/json'  
                },
                params:Ext.JSON.encode(obj.data),
                success: function(res){
                    Ext.Msg.alert('Success','Template deleted successfully');
                    grid.getStore().remove(obj);
                }
               })
                
            }
        });  
    }
});





